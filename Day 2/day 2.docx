In the previous lesson, we learned that we need to follow some workflows to work with Scikit-learn.
Now we will look in depth at each of the workflow's points.
Starting with Getting the data ready

Most of the time the data that we will have usually will not be ready to use. So we will need to make it ready to use.
To do so we need to follow 3 main things.
1. Split the data into features and label (X & y)
2. Filling/imputing or disregarding missing values
3. Converting non-numerical values to numerical values also known as features encoding

So we will use the heart_disease data here and we'll start with splitting the data in to features and labels.

To do that we define X as X = heart_disease.drop("target", axis = 1)
X.head(). so this will drop the target column and assign everything else in the X

and we will define y as the target column 
y = heart_disease["target"]
y.head()

after that we will import a module from sklearn and split the data
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)

the module train_test_split gives us 4 parameters. X _train and X_test will be the trainig data and test data from the values of X and y_train and y_test will take the values from y

Remember we shouldn't use the same data as train and test that's why we are splitting them and giving them a test size of 0.2 that means it will use 20% of the data from the file as test data and 80% wil be train data for both X and y

now if we run it and check the shape of X and y we will be able to understand the splitting between the data of heart_disease.csv file

Next we will fill the missing values
